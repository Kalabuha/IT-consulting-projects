@model MainViewModel

@{
    ViewData["Title"] = "Main";
}

<div id="containerContent" class="container-content-common">
    <div class="content-block-standart-indent">
        <h1 class="font-family-1 h1-standart-page gold-text">Главная</h1>
    </div>

    @{
        int selectedPresetId = Model.SelectedPreset != null ? Model.SelectedPreset.Id : 0;
    }

    <div class="content-block-standart-indent">
        <div class="buttons-panel">
            @*Выбрать пресет*@
            <div class="buttons-panel-block x-expandable">
                <form id="SelectPresetForm" asp-area="" asp-controller="Main" asp-action="SelectPreset" method="post">
                    <button class="button high-button text-align-left button-max-width x-expand" type="button">
                        <span class="large-text font-family-2 black-text">&#129095; Выбрать пресет</span>
                    </button>
                    <div class="select block-absolute-max-width x-expandable-block">
                        <div class="select-block select-block-height scroll-x-y-block">
                            @if (Model.Presets != null)
                            {
                                <ul class="select-list">
                                    @foreach (MainPagePresetWebModel presetModel in Model.Presets)
                                    {
                                        var forLabelPresetId = $"preset-{presetModel.Id}";
                                        var labelClassName = presetModel.IsPublished ? "green-text" : "black-text";

                                        <li class="select-list-item">
                                            <div class="select-list-item-block">
                                                <input class="select-point" type="radio" name="id" id="@forLabelPresetId" value="@presetModel.Id" checked="@presetModel.IsPublished" />
                                                <label class="middle-text bolder font-family-2 select-label @labelClassName" for="@forLabelPresetId">@presetModel.PresetName</label>
                                            </div>
                                        </li>
                                    }
                                </ul>
                            }
                        </div>
                        <div class="block-select-preset-button-block">
                            <button class="button low-button button-max-width" type="submit">
                                <span class="large-text font-family-2 black-text">Подтвердить</span>
                            </button>
                        </div>
                    </div>
                </form>
            </div>

            @*Опубликовать пресет*@
            <div class="buttons-panel-block">
                <form id="CreatePresetForm" asp-area="" asp-controller="Main" asp-action="PublishSelectedPreset" method="post">
                    <button class="button high-button text-align-left button-max-width" type="submit" name="id" value="@selectedPresetId">
                        <span class="large-text font-family-2 black-text">&#10084; Опубликовать</span>
                    </button>
                </form>
            </div>

            @*Удалить пресет*@
            <div class="buttons-panel-block x-expandable">
                <form id="DeletePresetForm" asp-area="" asp-controller="Main" asp-action="DeleteSelectedPreset" method="post">
                    <button class="button high-button text-align-left button-max-width x-expand" type="button">
                        <span class="large-text font-family-2 black-text">&#10006; Удалить</span>
                    </button>
                    <div class="select block-absolute-max-width x-expandable-block">
                        <div class="select-block select-block-height">
                            <p class="text font-family-2 black-text paragraph">
                                Вы уверены, что хотите удалить текущий пресет? При удалении данные, используемые этим
                                пресетом, не удалятся. Чтобы удалить данные воспользуйтесь панелью кнопок
                                соответствующих блоков данных.
                            </p>
                        </div>
                        <div class="block-select-preset-button-block">
                            <button class="button low-button button-max-width" type="submit" name="id" value="@selectedPresetId">
                                <span class="large-text font-family-2 black-text">Подтвердить</span>
                            </button>
                        </div>
                    </div>
                </form>
            </div>

            @*Создать пресет*@
            <div class="buttons-panel-block x-expandable">
                <form id="UpdatePresetForm" asp-area="" asp-controller="Main" asp-action="CreatePreset" method="post">
                    <button class="button high-button text-align-left button-max-width x-expand" type="button">
                        <span class="large-text font-family-2 black-text">&#9209; Создать</span>
                    </button>
                    <div class="select block-absolute-max-width x-expandable-block">
                        <div class="select-block select-block-height">
                            <div class="text-align-center content-block-inner">
                                <span class="middle-text font-family-2 black-text">Введите название:</span>
                            </div>
                            <div class="text-align-center content-block-inner">
                                <span class="text font-family-2 black-text">Не более 40 символов</span>
                            </div>
                            <textarea class="middle-text font-family-2 input-preset-name-textarea" name="model.PresetName" maxlength="40"></textarea>
                        </div>
                        <div class="block-select-preset-button-block">
                            <button class="button low-button button-max-width" type="submit">
                                <span class="large-text font-family-2 black-text">Подтвердить</span>
                            </button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <div class="content-block-standart-indent">
        <p class="middle-text font-family-2 gold-text paragraph">
            На&nbsp;главной странице гостевого сайта отображается опубликованный пресет. Чтобы поменять его необходимо
            выбрать другой пресет и&nbsp;нажать кнопку &laquo;Опубликовать&raquo;. Изменения&nbsp;же, которые вы&nbsp;
            вносите в&nbsp;выбраном пресете, вступают в&nbsp;силу сразу для этого пресета, включая и&nbsp;опубликованный.
            Поэтому для эксперементов лучше создать новый или использовать один из&nbsp;неопубликованных.
        </p>
    </div>

    @{
        bool IsHasPreset = false;
        MainPagePresetWebModel? selectedPreset = null;
    }

    @if (selectedPresetId > 0 && Model.Presets != null)
    {
        selectedPreset = Model.Presets.FirstOrDefault(p => p.Id == selectedPresetId);
        IsHasPreset = selectedPreset != null;
    }

    @if (IsHasPreset)
    {
        <div class="content-block-standart-indent">
            <h2 class="h2-standart-page font-family-1 gold-text">Название пресета: @selectedPreset!.PresetName</h2>
        </div>

        <div class="content-block-standart-indent">
            <div class="is-published-or-not-block">
                @{
                    string publishedOrNotSpanClassName;
                    string publishedOrNotSpanContent;

                    if (selectedPreset.IsPublished)
                    {
                        publishedOrNotSpanClassName = "green-text";
                        publishedOrNotSpanContent = "Опубликован";
                    }
                    else
                    {
                        publishedOrNotSpanClassName = "blue-text";
                        publishedOrNotSpanContent = "Не опубликован";
                    }
                }

                <span class="biggest-text font-family-2 @publishedOrNotSpanClassName">@publishedOrNotSpanContent</span>
            </div>
        </div>
    }
    else
    {
        <div class="content-block-standart-indent">
            <h2 class="h2-standart-page font-family-1 gold-text">Внимание! Пресет в данный момент не выбран</h2>
        </div>

        <div class="content-block-standart-indent">
            <p class="middle-text font-family-2 gold-text paragraph">
                В&nbsp;данный момент пресет не&nbsp;выбран. На главной странице будут отображаться данные по умолчанию. Изменять данные по&nbsp;умолчанию запрещено.
                Необходимо выбрать один из&nbsp;неопубликованных или создать новый. Для создания нового пресета нажмите кнопку &laquo;Создать&raquo;.
            </p>
        </div>
    }

    <div class="main-block x-reloadable x-button-handler-text-block"
         data-load-action="@Url.Action("TextBlock", "Main", new { id = selectedPresetId })"></div>

    <div class="main-block x-reloadable x-button-handler-image-block"
         data-load-action="@Url.Action("ImageBlock", "Main", new { id = selectedPresetId })"></div>

    <div class="main-block x-reloadable x-button-handler-action-block"
         data-load-action="@Url.Action("ActionBlock", "Main", new { id = selectedPresetId })"></div>
</div>

@section Scripts
{
<script>
    function LoadXReloadable($div) {
        // загрузить кусок в div
        var url = $div.data("load-action");
        $div.load(url);
    }

    $(function() {
        $(".x-reloadable").each(function() {
            LoadXReloadable($(this));
        });

        $(".x-reloadable").on("submit", ".x-reloadable-form", function(e) {
            // запретить браузеру самому отправлять форму
            e.preventDefault();

            var $form = $(this);
            var $xReloadable = $form.closest(".x-reloadable");

            // мы тут сами разберёмся с отправкой
            $form.ajaxSubmit({
                success: function(responseHtml) {
                    $xReloadable.html(responseHtml);
                }
            });
        });

        //Настроить текст
        $(".x-button-handler-text-block").on("click", ".x-app-text-block .x-url-button", function() {
            let $btn = $(this);
            let $myBlock = $btn.closest(".x-app-text-block");
            let $selectedText = $myBlock.find("input[name=SelectedTextId]:checked");

            let currentPresetId = $myBlock.data("current-preset-id");
            let actionUrl = $btn.data("action-url");

            let action = $btn.data("action");

            console.log($btn);
            if(action == "select") {
                let selectedTextId = $selectedText.val();
                $.post(
                    actionUrl,
                    {
                        CurrentPresetId: currentPresetId,
                        SelectedTextId: selectedTextId
                    },
                    function(responseHtml) {
                        LoadXReloadable($btn.closest(".x-reloadable"));
                    });
            } else if(action == "remove") {
                $.post(
                    actionUrl,
                    {
                        presetId: currentPresetId
                    },
                    function(responseHtml) {
                        LoadXReloadable($btn.closest(".x-reloadable"));
                    });
            } else if (action == "delete") {
                let selectedTextId = $selectedText.val();
                $.post(
                    actionUrl,
                    {
                        CurrentPresetId: currentPresetId,
                        SelectedTextId: selectedTextId
                    },
                    function(responseHtml) {
                        LoadXReloadable($btn.closest(".x-reloadable"));
                    });
            } else if (action == "create") {
                let $textAreaCreateText = $(".x-text-area-created-text");
                let textAreaCreateTextContent = $textAreaCreateText.val();
                $.post(
                    actionUrl,
                    {
                        CurrentPresetId: currentPresetId,
                        TextContent: textAreaCreateTextContent
                    },
                    function(responseHtml) {
                        LoadXReloadable($btn.closest(".x-reloadable"));
                    });
            } else {
                alert ("Запрос не обработан!");
            }
        });

        //Настроить изображение в блоке изображения
        $(".x-button-handler-image-block").on("click", ".x-app-image-block .x-url-button", function() {
            let $btn = $(this);
            let $myBlock = $btn.closest(".x-app-image-block");
            let $selectedImage = $myBlock.find("input[name=SelectedImageId]:checked");

            let $myMainBlock = $myBlock.closest("div[data-current-preset-id]");
            let currentPresetId = $myMainBlock.data("current-preset-id");

            let actionUrl = $btn.data("action-url");
            let action = $btn.data("action");

            if(action == "select") {
                let selectedImageId = $selectedImage.val();
                $.post(
                    actionUrl,
                    {
                        CurrentPresetId: currentPresetId,
                        SelectedImageId: selectedImageId
                    },
                    function(responseHtml) {
                        LoadXReloadable($btn.closest(".x-reloadable"));
                    });
            } else if(action == "remove") {
                $.post(
                    actionUrl,
                    {
                        presetId: currentPresetId
                    },
                    function(responseHtml) {
                        LoadXReloadable($btn.closest(".x-reloadable"));
                    });
            } else if (action == "delete") {
                let selectedImageId = $selectedImage.val();
                $.post(
                    actionUrl,
                    {
                        CurrentPresetId: currentPresetId,
                        SelectedImageId: selectedImageId
                    },
                    function(responseHtml) {
                        LoadXReloadable($btn.closest(".x-reloadable"));
                    });
            } else {
                alert ("Запрос не обработан!");
            }
        });

        //Настроить кнопку в блоке изображения
        $(".x-button-handler-image-block").on("click", ".x-app-button-block .x-url-button", function() {
            let $btn = $(this);
            let $myBlock = $btn.closest(".x-app-button-block");
            let $selectedButton = $myBlock.find("input[name=SelectedButtonId]:checked");

            let $myMainBlock = $myBlock.closest("div[data-current-preset-id]");
            let currentPresetId = $myMainBlock.data("current-preset-id");

            let actionUrl = $btn.data("action-url");
            let action = $btn.data("action");

            if(action == "select") {
                let selectedButtonId = $selectedButton.val();
                $.post(
                    actionUrl,
                    {
                        CurrentPresetId: currentPresetId,
                        SelectedButtonId: selectedButtonId
                    },
                    function(responseHtml) {
                        LoadXReloadable($btn.closest(".x-reloadable"));
                    });
            } else if(action == "remove") {
                let selectedButtonId = $selectedButton.val();
                $.post(
                    actionUrl,
                    {
                        presetId: currentPresetId
                    },
                    function(responseHtml) {
                        LoadXReloadable($btn.closest(".x-reloadable"));
                    });
            } else if (action == "delete") {
                let selectedButtonId = $selectedButton.val();
                $.post(
                    actionUrl,
                    {
                        CurrentPresetId: currentPresetId,
                        SelectedButtonId: selectedButtonId
                    },
                    function(responseHtml) {
                        LoadXReloadable($btn.closest(".x-reloadable"));
                    });
            } else if (action == "create") {
                let $inputCreateButton = $(".x-input-created-button");
                let inputCreateButtonContent = $inputCreateButton.val();
                $.post(
                    actionUrl,
                    {
                        CurrentPresetId: currentPresetId,
                        ButtonContent: inputCreateButtonContent
                    },
                    function(responseHtml) {
                        LoadXReloadable($btn.closest(".x-reloadable"));
                    });
            } else {
                alert ("Запрос не обработан!");
            }
        });

        //Настроить фразу в блоке изображения
        $(".x-button-handler-image-block").on("click", ".x-app-phrase-block .x-url-button", function() {
            let $btn = $(this);
            let $myBlock = $btn.closest(".x-app-phrase-block");
            let $selectedPhrase = $myBlock.find("input[name=SelectedPhraseId]:checked");

            let $myMainBlock = $myBlock.closest("div[data-current-preset-id]");
            let currentPresetId = $myMainBlock.data("current-preset-id");

            let actionUrl = $btn.data("action-url");
            let action = $btn.data("action");

            if(action == "select") {
                let selectedPhraseId = $selectedPhrase.val();
                $.post(
                    actionUrl,
                    {
                        CurrentPresetId: currentPresetId,
                        SelectedPhraseId: selectedPhraseId
                    },
                    function(responseHtml) {
                        LoadXReloadable($btn.closest(".x-reloadable"));
                    });
            } else if(action == "remove") {
                $.post(
                    actionUrl,
                    {
                        presetId: currentPresetId
                    },
                    function(responseHtml) {
                        LoadXReloadable($btn.closest(".x-reloadable"));
                    });
            } else if (action == "delete") {
                let selectedPhraseId = $selectedPhrase.val();
                $.post(
                    actionUrl,
                    {
                        CurrentPresetId: currentPresetId,
                        SelectedPhraseId: selectedPhraseId
                    },
                    function(responseHtml) {
                        LoadXReloadable($btn.closest(".x-reloadable"));
                    });
            } else if (action == "create") {
                let $inputCreatePhrase = $(".x-input-created-phrase");
                let inputCreatePhraseContent = $inputCreatePhrase.val();
                $.post(
                    actionUrl,
                    {
                        CurrentPresetId: currentPresetId,
                        PhraseContent: inputCreatePhraseContent
                    },
                    function(responseHtml) {
                        LoadXReloadable($btn.closest(".x-reloadable"));
                    });
            } else {
                alert ("Запрос не обработан!");
            }
        });

        //Настроить призыв к действию
        $(".x-button-handler-action-block").on("click", ".x-app-action-block .x-url-button", function() {
            let $btn = $(this);
            let $myBlock = $btn.closest(".x-app-action-block");
            let $selectedAction = $myBlock.find("input[name=SelectedActionId]:checked");

            let currentPresetId = $myBlock.data("current-preset-id");
            let actionUrl = $btn.data("action-url");

            let action = $btn.data("action");

            if(action == "select") {
                let selectedActionId = $selectedAction.val();
                $.post(
                    actionUrl,
                    {
                        CurrentPresetId: currentPresetId,
                        SelectedActionId: selectedActionId
                    },
                    function(responseHtml) {
                        LoadXReloadable($btn.closest(".x-reloadable"));
                    });
            } else if(action == "remove") {
                $.post(
                    actionUrl,
                    {
                        presetId: currentPresetId
                    },
                    function(responseHtml) {
                        LoadXReloadable($btn.closest(".x-reloadable"));
                    });
            } else if (action == "delete") {
                let selectedActionId = $selectedAction.val();
                $.post(
                    actionUrl,
                    {
                        CurrentPresetId: currentPresetId,
                        SelectedActionId: selectedActionId
                    },
                    function(responseHtml) {
                        LoadXReloadable($btn.closest(".x-reloadable"));
                    });
            } else if (action == "create") {
                let $inputCreateAction = $(".x-input-created-action");
                let inputCreateActionContent = $inputCreateAction.val();
                $.post(
                    actionUrl,
                    {
                        CurrentPresetId: currentPresetId,
                        ActionContent: inputCreateActionContent
                    },
                    function(responseHtml) {
                        LoadXReloadable($btn.closest(".x-reloadable"));
                    });
            } else {
                alert ("Запрос не обработан!");
            }
        });


    });
</script>
}